@using PHONE_SERVICE.Data.Enums;
@model RepairRequestPageViewModel

@{
    ViewData["Title"] = "Клиентски заявки";
}

<style>
    img {
        max-height: 25px;
        width: auto;
    }
</style>

<h2>Моитие заявки</h2>
<table class="table">
    <thead>
        <tr>
            <th>Вид заявка</th>
            <th>Дата</th>
            <th>Вид ремонт</th>
            <th>Телефон</th>
            <th>Описание</th>
            <th>Статус</th>
            <th>Рейтинг</th>
            <th>Цена</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var repairRequest in Model.RepairRequests)
        {
            <tr>
                <td>
                    @if (repairRequest.RepairRequestType == RepairRequestType.Standard)
                    {
                        <img src="~/images/standard.png" class="img-fluid" alt="Standard Delivery">
                        <text> (14 дни)</text>

                    }
                    else if (repairRequest.RepairRequestType == RepairRequestType.Fast)
                    {
                        <img src="~/images/fast.png" class="img-fluid" alt="Fast Delivery">
                        <text> (7 дни)</text>

                    }
                    else if (repairRequest.RepairRequestType == RepairRequestType.Express)
                    {
                        <img src="~/images/express.png" class="img-fluid" alt="Express Delivery">
                        <text> (3 дни)</text>

                    }
                    @repairRequest.RepairRequestType</td>
                <td>@repairRequest.Date.ToShortDateString()</td>
                <td>@repairRequest.RepairType</td>
                <td>@repairRequest.PhoneModel.PhoneBrand @repairRequest.PhoneModel.Name</td>
                <td>
                    @{
                        string description = repairRequest.Descripion ?? ""; 
                        if (!string.IsNullOrEmpty(description) && description.Length > 30) 
                        {
                            description = description.Substring(0, 30) + "...";
                        }
                    }
                    @description
                    @if (!string.IsNullOrEmpty(repairRequest.Descripion) && repairRequest.Descripion.Length > 30)
                    {
                        <button type="button" class="btn btn-link btn-sm" data-bs-toggle="modal" data-bs-target="#descriptionModal_@repairRequest.RepairRequestId">
                            Read more
                        </button>
                        <div class="modal fade" id="descriptionModal_@repairRequest.RepairRequestId" tabindex="-1" aria-labelledby="descriptionModalLabel" aria-hidden="true">
                            <div class="modal-dialog modal-dialog-centered modal-lg">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="descriptionModalLabel">Description</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body" style="word-wrap: break-word;">
                                        @repairRequest.Descripion
                                    </div>
                                </div>
                            </div>
                        </div>


                    }
                </td>
                <td>@repairRequest.Status</td>
                <td class="jsRating">@repairRequest.Rating</td>
                <td>@(Math.Round(repairRequest.Price, 2).ToString("F2")) лв.</td>
                @if (repairRequest.Status == PHONE_SERVICE.Data.Enums.RepairRequestStatus.Completed)
                {
                    <td>
                        <div class="rating" id="rating-container-@repairRequest.RepairRequestId">
                            <button class="btn btn-primary" onclick="toggleRatingScale(@repairRequest.RepairRequestId)">Оцени</button>
                            <div class="rating-scale" style="display:none;">
                                <input type="range" min="1" max="10" value="@repairRequest.Rating" class="slider" id="rating-@repairRequest.RepairRequestId" oninput="updateRatingValue(@repairRequest.RepairRequestId)" />
                                <span id="rating-value-@repairRequest.RepairRequestId">@repairRequest.Rating</span>
                                <button type="button" class="btn btn-success" onclick="submitRating(@repairRequest.RepairRequestId)">Приложи</button>
                            </div>
                        </div>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>
@section scripts {
    <script>
        function toggleRatingScale(repairRequestId) {
            var ratingScale = document.getElementById('rating-container-' + repairRequestId).getElementsByClassName('rating-scale')[0];
            
            ratingScale.style.display = (ratingScale.style.display === 'none' || ratingScale.style.display === '') ? 'block' : 'none';
        }

        function updateRatingValue(repairRequestId) {
            var ratingValue = document.getElementById('rating-' + repairRequestId).value;
            document.getElementById('rating-value-' + repairRequestId).textContent = ratingValue;
        }

        function submitRating(repairRequestId) {
            var ratingElement = document.getElementById('rating-' + repairRequestId);
            var ratingValue = ratingElement.value;
            $.ajax({
                type: 'POST',
                url: '/RepairRequest/Rate',
                data: { repairRequestId: repairRequestId, rating: ratingValue },
                success: function (result) {
                    console.log('Rating submitted successfully');
                    toggleRatingScale(repairRequestId);
                    var columnRating = ratingElement.closest('tr').querySelector('.jsRating');
                    columnRating.innerHTML = ratingValue;
                },
                error: function (error) {
                    console.error('Error submitting rating', error);
                }
            });
        }
    </script>
}
