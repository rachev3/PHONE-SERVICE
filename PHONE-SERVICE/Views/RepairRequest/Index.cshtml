@model RepairRequestPageViewModel
@{
    var claims = User.Claims.ToList();
    var userId = claims[0].Value;
}
<div class="container mt-5">
    <h2>Всички завки</h2>
    <div class="row">
        <div class="col-md-6">
            <partial name="_SearchBar" />
        </div>
    </div>
    <table class="table table-hover">
        <thead>
            <tr>
                <th>Тип заявка</th>
                <th>
                    <a href="@Url.Action("SortByDate", new { sortOrder = ViewData["DateSortParam"], status = Model.Status, type = Model.RequestType })" class="text-decoration-none text-dark">
                        Дата
                        <i class="fas fa-sort"></i>
                    </a>
                </th>
                <th>Вид поправка</th>
                <th>Телефон</th>
                <th>Описание</th>
                <th>Статус</th>
                <th>Рейтинг</th>
                <th>Цена</th>
                @if (User.IsInRole("Worker") || User.IsInRole("Admin"))
                {
                    <th>Действия</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var repairRequest in Model.RepairRequests)
            {
                <tr>
                    <td>@repairRequest.RepairRequestType</td>
                    <td>@repairRequest.Date.ToShortDateString()</td>
                    <td>@repairRequest.RepairType</td>
                    <td>@repairRequest.PhoneModel.PhoneBrand @repairRequest.PhoneModel.Name</td>
                    <td>
                        @{
                            string description = repairRequest.Descripion ?? ""; // If repairRequest.Description is null, use an empty string
                            if (!string.IsNullOrEmpty(description) && description.Length > 50) // Check if the description is not null or empty before accessing its Length property
                            {
                                description = description.Substring(0, 50) + "...";
                            }
                        }
                        @description
                        @if (!string.IsNullOrEmpty(repairRequest.Descripion) && repairRequest.Descripion.Length > 50)
                        {
                            <button type="button" class="btn btn-link btn-sm" data-bs-toggle="modal" data-bs-target="#descriptionModal_@repairRequest.RepairRequestId">
                                Read more
                            </button>
                            <!-- Modal -->
                            <!-- Modal -->
                            <div class="modal fade" id="descriptionModal_@repairRequest.RepairRequestId" tabindex="-1" aria-labelledby="descriptionModalLabel" aria-hidden="true">
                                <div class="modal-dialog modal-dialog-centered modal-lg">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="descriptionModalLabel">Description</h5>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                        </div>
                                        <div class="modal-body" style="word-wrap: break-word;">
                                            <!-- Apply word-wrap: break-word; to break text into new lines -->
                                            @repairRequest.Descripion
                                        </div>
                                    </div>
                                </div>
                            </div>


                        }
                    </td>

                    <td>@repairRequest.Status</td>
                    <td>@repairRequest.Rating</td>
                    <td>@(Math.Round(repairRequest.Price, 2).ToString("F2")) лв.</td>

                    @if (User.IsInRole("Worker") && userId == repairRequest.WorkerId || User.IsInRole("Admin"))
                    {
                        <td>
                            <div class="btn-group" role="group">
                                <a asp-action="Edit" asp-route-id="@repairRequest.RepairRequestId" class="btn btn-primary me-2">Редактирай</a>
                                <form asp-action="DeleteConfirm" asp-route-id="@repairRequest.RepairRequestId" method="post" onsubmit="return confirm('Сигурни ли сте, че искате да изтриете тази заявка?');" class="me-2">
                                    <button type="submit" class="btn btn-danger">Изтрий</button>
                                </form>
                            </div>
                        </td>
                    }

                </tr>
            }
        </tbody>
    </table>
    @if (User.IsInRole("Worker") || User.IsInRole("Admin"))
    {
        <a asp-action="Create" asp-controller="RepairRequest" class="btn btn-success">Добави нова заявка</a>
    }
</div>
